name: Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:
    inputs:
      tag:
        description: "Tag to release"
        required: true

jobs:
  goreleaser:
    name: Run GoReleaser
    runs-on: ubuntu-latest
    env:
      GITHUB_TOKEN: ${{ secrets.GH_PAT }}
    steps:
      - name: Set up git
        run: git config --global url."https://divkix:${GITHUB_TOKEN}@github.com".insteadOf "https://github.com"
      - name: Checkout
        uses: actions/checkout@v3
      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: "stable"
        # only run this step when the tag is not already created
      - if: startsWith(github.ref, 'refs/tags/') != 'true' && github.event.inputs.tag != ''
        name: Create and Push Tag
        run: |-
          git config --global user.email "divkix@divkix.me"
          git config --global user.name "Divanshu Chauhan"
          tag=${{ github.event.inputs.tag }} # if triggered by workflow_dispatch
          if [ -z "$tag" ]; then
            tag=${GITHUB_REF#refs/tags/}
          fi
          git tag -f -a -m "$tag" "$tag"
          git push -f origin "$tag"
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v4
        with:
          version: latest
          args: release --clean
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}

  run-tests:
    name: Run test scripts
    runs-on: ubuntu-latest
    needs: goreleaser
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Run tests/install-script.sh
        run: |-
          ./tests/install-script.sh

  update-install-script:
    name: Update scripts/install.sh in warp-releases
    runs-on: ubuntu-latest
    needs: goreleaser
    env:
      RELEASES_REPO: warpdl/warp-releases
    steps:
      - name: Get latest tag from GitHub API
        run: |-
          # set latest_tag variable to latest tag of $RELEASES_REPO
          latest_tag=$(curl -s https://api.github.com/repos/$RELEASES_REPO/releases/latest | jq -r '.tag_name')
          # set it into GITHUB_ENV so it can be used in next steps
          echo "latest_tag=$latest_tag" >> $GITHUB_ENV
      - name: Checkout warp
        uses: actions/checkout@v3
        with:
          path: ./warp
      - name: Checkout warp-releases
        uses: actions/checkout@v3
        with:
          repository: ${{ env.RELEASES_REPO }}
          persist-credentials: false
          fetch-depth: 0
          path: ./warp-releases
      - name: Replace version and copy install.sh to warp-releases
        run: |-
          sed -i "s/LATEST_RELEASE=.*/LATEST_RELEASE=\"${{ env.latest_tag }}\"/g" ./warp/scripts/install.sh
          cp ./warp/scripts/install.sh ./warp-releases/scripts/install.sh
      - name: Commit changes
        run: |-
          git config --global user.email "divkix@divkix.me"
          git config --global user.name "Divkix"
          cd warp-releases && git commit -a -m "bump to ${{ env.latest_tag }}"
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GH_PAT }}
          repository: ${{ env.RELEASES_REPO }}
          directory: ./warp-releases
